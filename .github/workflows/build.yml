name: Release

on:
  workflow_call:
    inputs:
      branch:
        description: 'Branch target'
        default: main
        type: string
      composer-cache:
        required: true
        type: string
      composer-cache-key:
        default: php-${{ inputs.php-version }}
        type: string
      sentry-project:
        required: false
        type: string
      php-version:
        default:  '8.2'
        type: string
      target-env:
        description: 'Build target'
        default: testing
        type: string
      target-url:
        description: 'URL target'
        default: http://localhost:8000
        type: string
    outputs:
      app-key:
        value: ${{ jobs.build.outputs.app-key }}
      target-env:
        value: ${{ jobs.build.outputs.target-env }}
      target-url:
        value: ${{ jobs.build.outputs.target-url }}
    secrets:
      ACCESS_TOKEN:
        required: false
      SENTRY_AUTH_TOKEN:
        required: false
      SENTRY_DSN:
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build for `${{ inputs.target-env }}`
    outputs:
      app-key: ${{ steps.app.outputs.generated-key }}
      target-env: ${{ inputs.target-env }}
      target-url: ${{ inputs.target-url }}

    env:
      APP_ENV: ${{ inputs.target-env }}
      APP_URL: ${{ inputs.target-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: true

      - name: Setup node.js
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version: lts/*

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.php-version }}
          extensions: curl, intl, libxml, mbstring, pcntl, ssh2, zip
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      - name: Prepare Composer Cache
        uses: actions/cache@v4
        with:
          path: ${{ inputs.composer-cache }}
          key: ${{ inputs.composer-cache-key }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ inputs.composer-cache-key }}-composer-

      - name: Install dependencies
        id: app
        run: |
          [[ -f .github/.env.example ]] && cp .github/.env.example .env
          composer update --prefer-dist --no-scripts --no-interaction --no-progress --ansi
          echo "generated-key=$(php artisan key:generate --show)" >> $GITHUB_OUTPUT
          touch database/database.sqlite

      - name: Dump Autoload
        env:
          APP_KEY: ${{ steps.app.outputs.generated-key }}
        run: |
          composer dump-autoload

      - name: Deploy Info
        if: env.APP_ENV != 'testing'
        env:
          BRANCH: ${{ inputs.branch }}
        run: |
          composer dep deploy:info env=$APP_ENV -- --branch $BRANCH

      - name: Build frontend
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SENTRY_ORG: ${{ github.repository_owner }}
          SENTRY_PROJECT: ${{ inputs.sentry-project }}
        run: |
          pnpm build --mode ${{ env.APP_ENV }}

      - name: Store assets
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ env.APP_ENV }}
          path: |
            public/build
            public/vendor
